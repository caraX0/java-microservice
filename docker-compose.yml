version: '2'

services:
  config:
    build: config-server/
    ports:
      - 8888:8888
    networks:
      - net
    hostname: config
    container_name: config 

  eureka:
    build: eureka-server/
    ports:
      - 8010:8010
    networks:
      - net
    depends_on:
      - config
    hostname: eureka
    container_name: eureka  

  reminder:
    build: remainder-service/
    ports:
      - 8015:8015
    networks:
      - net
    depends_on:
      - eureka
      - admin
    hostname: reminder

  user:
    build: user-service/
    ports:
      - 8016:8016
    networks:
      - net
    depends_on:
      - eureka
      - admin
    hostname: user
    container_name: user

  oauth:
    build: oauth-server/
    ports:
      - 8017:8017
    networks:
      - net
    depends_on:
      - eureka
      - user
      - admin
    hostname: oauth
    container_name: oauth
    

  gateway:
    build: api-gateway/
    ports:
      - 8018:8018
    networks:
      - net
    depends_on:
      - eureka
      - admin
    hostname: gateway

  mail:
    build: mail-service/
    ports:
      - 8020:8020
    networks:
      - net
    depends_on:
      - eureka
      - admin
    hostname: mail
    container_name: mail

  turbine:
    build: turbine-monitoring/
    ports:
      - 8022:8022
    networks:
      - net
    depends_on:
      - eureka
    hostname: turbine
    container_name: turbine

  admin:
    build:
      context: ./admin-server
      dockerfile: ./Dockerfile
    depends_on:
      - eureka
    container_name: admin
    ports:
      - 8026:8026
    networks:
      - net
    environment:
      - EUREKA_SERVICE_URL=http://eureka:8010
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
      - LOGGING_FILE=/tmp/admin.log

  proxy:
    build: proxy/
    ports:
      - 80:80
    networks:
      - net
    depends_on:
      - gateway
    hostname: proxy
    container_name: proxy  

  elk:
    image: sebp/elk:latest
    ports:
      - 5601:5601
      - 9200:9200
      - 5044:5044
      - 5000:5000
    networks:
      - net
    volumes:
      - todo_elk:/var/lib/elasticsearch
    hostname: elk
    container_name: elk
    
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    networks:
      - net
      
  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.0.178 #ip local, not use localhost
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "todo-mail:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    hostname: kafka
    container_name: kafka
    networks:
      - net

volumes:
  todo_data:
    external: true
  todo_elk:
    external: true

networks:
  net:
    driver: bridge
